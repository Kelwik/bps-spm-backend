generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      UserRole @default(op_satker)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  satkerId  Int?
  satker    Satker?  @relation(fields: [satkerId], references: [id])
}

model Satker {
  id         Int    @id @default(autoincrement())
  kodeSatker String @unique
  nama       String
  eselon     String
  spms       Spm[]
  users      User[]
}

model Spm {
  id            Int         @id @default(autoincrement())
  nomorSpm      String      @unique
  tahunAnggaran Int
  tanggal       DateTime
  totalAnggaran Int
  status        SpmStatus   @default(MENUNGGU)
  driveLink       String?
  rejectionComment String?
  satkerId      Int
  satker        Satker      @relation(fields: [satkerId], references: [id])
  rincian       SpmRincian[]
}

model SpmRincian {
  id              Int         @id @default(autoincrement())
  kodeProgram     String
  kodeKegiatan    String
  jumlah          Int
  kodeKRO         String
  kodeRO          String
  kodeKomponen    String
  kodeSubkomponen String
  uraian          String
  spmId           Int
  spm             Spm         @relation(fields: [spmId], references: [id], onDelete: Cascade)
  kodeAkunId      Int
  kodeAkun        KodeAkun    @relation(fields: [kodeAkunId], references: [id])
  jawabanFlags    JawabanFlag[]
}

model JawabanFlag {
  id           Int        @id @default(autoincrement())
  nama         String
  tipe         FlagType
  rincianSpmId Int
  rincianSpm   SpmRincian @relation(fields: [rincianSpmId], references: [id], onDelete: Cascade)

  @@unique([rincianSpmId, nama])
}



model KodeAkun {
  id    Int    @id @default(autoincrement())
  kode  String
  nama  String 

  templateFlags Flag[]
  rincian       SpmRincian[]

  @@unique([kode, nama])
}

model Flag {
  id         Int      @id @default(autoincrement())
  nama       String
  tipe       FlagType
  kodeAkunId Int
  kodeAkun   KodeAkun @relation(fields: [kodeAkunId], references: [id])

  @@unique([kodeAkunId, nama])
}

enum SpmStatus {
  MENUNGGU
  DITOLAK
  DITERIMA
}

enum FlagType {
  IYA
  TIDAK
  IYA_TIDAK
}

enum UserRole {
  supervisor
  op_prov
  op_satker
  viewer
}

